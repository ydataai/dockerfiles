name: Prereleased

on:
  release:
    types: [ prereleased ]

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-20.04

    outputs:
      version: ${{ steps.version.outputs.value }}

    steps:
    - name: Version
      id: version
      run: echo ::set-output name=value::`echo ${{ github.ref }} | sed -n -E 's/refs\/tags\/([0-9]+.[0-9]+.[0-9]+)/\1/p'`

  build-base-python-images:
    name: Build and push Laboratories Base Python Docker images
    runs-on: ubuntu-20.04

    needs: prepare

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push Lab Base Python images
      run: ./images-builder.sh base_python ${{ needs.prepare.outputs.version }}

  build-base-r-images:
    name: Build and push Laboratories Base R Docker images
    runs-on: ubuntu-20.04

    needs: prepare

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push Lab Base R images
      run: ./images-builder.sh base_r ${{ needs.prepare.outputs.version }}

  build-jupyterlab-python-images:
    name: Build and push JupyterLab Python Docker images
    runs-on: ubuntu-20.04

    needs: [prepare, build-base-python-images]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push JupyterLab Python images
      run: ./images-builder.sh jupyterlab_python ${{ needs.prepare.outputs.version }}

  build-jupyterlab-r-images:
    name: Build and push JupyterLab R Docker images
    runs-on: ubuntu-20.04

    needs: [prepare, build-base-r-images]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push JupyterLab R images
      run: ./images-builder.sh jupyterlab_r ${{ needs.prepare.outputs.version }}

  build-jupyterlab-python-tensorflow-images:
    name: Build and push JupyterLab Python Tensorflow Docker images
    runs-on: ubuntu-20.04

    needs: [prepare, build-base-python-images, build-jupyterlab-python-images]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push JupyterLab Python Tensorflow Bundles images
      run: ./images-builder.sh jupyterlab_python_tensorflow ${{ needs.prepare.outputs.version }}

  build-jupyterlab-r-tensorflow-images:
    name: Build and push JupyterLab R Tensorflow Docker images
    runs-on: ubuntu-20.04

    needs: [prepare, build-base-r-images, build-jupyterlab-r-images]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push JupyterLab R Tensorflow images
      run: ./images-builder.sh jupyterlab_r_tensorflow ${{ needs.prepare.outputs.version }}

  build-jupyterlab-python-torch-images:
    name: Build and push JupyterLab Python Torch Docker images
    runs-on: ubuntu-20.04

    needs: [prepare, build-base-python-images, build-jupyterlab-python-images]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push JupyterLab Python Torch images
      run: ./images-builder.sh jupyterlab_python_torch ${{ needs.prepare.outputs.version }}

  build-jupyterlab-r-torch-images:
    name: Build and push JupyterLab R Torch Docker images
    runs-on: ubuntu-20.04

    needs: [prepare, build-base-r-images, build-jupyterlab-r-images]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push JupyterLab R Torch images
      run: ./images-builder.sh jupyterlab_r_torch ${{ needs.prepare.outputs.version }}

  build-h2o-images:
    name: Build and push H2O Docker images
    runs-on: ubuntu-20.04

    needs: [prepare, build-base-python-images]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push H2O images
      run: ./images-builder.sh h2o ${{ needs.prepare.outputs.version }}

  build-rstudio-images:
    name: Build and push RStudio Docker images
    runs-on: ubuntu-20.04

    needs: [prepare, build-base-r-images]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push RStudio images
      run: ./images-builder.sh rstudio ${{ needs.prepare.outputs.version }}

  build-rstudio-tensorflow-images:
    name: Build and push RStudio Tensorflow Docker images
    runs-on: ubuntu-20.04

    needs: [prepare, build-rstudio-images]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push RStudio Tensorflow images
      run: ./images-builder.sh rstudio_tensorflow ${{ needs.prepare.outputs.version }}

  build-rstudio-torch-images:
    name: Build and push RStudio Torch Docker images
    runs-on: ubuntu-20.04

    needs: [prepare, build-rstudio-images]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push RStudio Torch images
      run: ./images-builder.sh rstudio_torch ${{ needs.prepare.outputs.version }}

  build-ydata-image:
    name: Build and push YData Docker images
    runs-on: ubuntu-20.04

    needs: [prepare, build-base-python-images, build-jupyterlab-python-images]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: sed -i 's/https:\/\/github.com/https:\/\/${{ secrets.ACCESS_TOKEN }}:x-oauth-basic@github.com/g' requirements.txt

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.PRIVATE_CONTAINER_REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Build and Push YData image
      run: ./images-builder.sh ydata ${{ needs.prepare.outputs.version }}
