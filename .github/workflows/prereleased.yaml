name: Prereleased

on:
  release:
    types: [ prereleased ]

env:
  COMPONENT: laboratory-controller/base

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-20.04

    outputs:
      version: ${{ steps.version.outputs.value }}

    steps:
    - name: Version
      id: version
      run: echo ::set-output name=value::`echo ${{ github.ref }} | sed -n -E 's/refs\/tags\/([0-9]+.[0-9]+.[0-9]+)/\1/p'`

  base-python-images-cpu:
    name: Laboratories Base Python  CPU
    runs-on: ubuntu-20.04

    needs: prepare

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Lab Base Python images
      run: ./images-builder.sh base_python cpu ${{ needs.prepare.outputs.version }}

  base-python-images-gpu:
    name: Laboratories Base Python  GPU
    runs-on: ubuntu-20.04

    needs: prepare

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Lab Base Python images
      run: ./images-builder.sh base_python gpu ${{ needs.prepare.outputs.version }}

  base-r-images-cpu:
    name: Laboratories Base R  CPU
    runs-on: ubuntu-20.04

    needs: prepare

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Lab Base R images
      run: ./images-builder.sh base_r cpu ${{ needs.prepare.outputs.version }}

  base-r-images-gpu:
    name: Laboratories Base R  GPU
    runs-on: ubuntu-20.04

    needs: prepare

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Lab Base R images
      run: ./images-builder.sh base_r gpu ${{ needs.prepare.outputs.version }}

  jupyterlab-python-images-cpu:
    name: JupyterLab Python  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, base-python-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab Python images
      run: ./images-builder.sh jupyterlab_python cpu ${{ needs.prepare.outputs.version }}

  jupyterlab-python-images-gpu:
    name: JupyterLab Python  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, base-python-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab Python images
      run: ./images-builder.sh jupyterlab_python gpu ${{ needs.prepare.outputs.version }}

  jupyterlab-python-tensorflow-115-images-cpu:
    name: JupyterLab Python Tensorflow 1.15  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-python-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/jupyterlab_python_tensorflow-1.15/requirements.txt

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab Python Tensorflow 1.15 Bundles images
      run: ./images-builder.sh jupyterlab_python_tensorflow-1.15 cpu ${{ needs.prepare.outputs.version }}

  jupyterlab-python-tensorflow-115-images-gpu:
    name: JupyterLab Python Tensorflow 1.15  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-python-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/jupyterlab_python_tensorflow-1.15/requirements.txt

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab Python Tensorflow 1.15 Bundles images
      run: ./images-builder.sh jupyterlab_python_tensorflow-1.15 gpu ${{ needs.prepare.outputs.version }}

  jupyterlab-python-tensorflow-23-images-cpu:
    name: JupyterLab Python Tensorflow 2.3  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-python-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/jupyterlab_python_tensorflow-2.3/requirements.txt

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab Python Tensorflow 2.3 Bundles images
      run: ./images-builder.sh jupyterlab_python_tensorflow-2.3 cpu ${{ needs.prepare.outputs.version }}

  jupyterlab-python-tensorflow-23-images-gpu:
    name: JupyterLab Python Tensorflow 2.3  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-python-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/jupyterlab_python_tensorflow-2.3/requirements.txt

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab Python Tensorflow 2.23 Bundles images
      run: ./images-builder.sh jupyterlab_python_tensorflow-2.3 gpu ${{ needs.prepare.outputs.version }}

  jupyterlab-python-torch-images-cpu:
    name: JupyterLab Python Torch  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-python-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/jupyterlab_python_torch-1.7/requirements.txt

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab Python Torch images
      run: ./images-builder.sh jupyterlab_python_torch cpu ${{ needs.prepare.outputs.version }}

  jupyterlab-python-torch-images-gpu:
    name: JupyterLab Python Torch  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-python-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/jupyterlab_python_torch-1.7/requirements.txt

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab Python Torch images
      run: ./images-builder.sh jupyterlab_python_torch gpu ${{ needs.prepare.outputs.version }}

  jupyterlab-python-ydata-image-cpu:
    name: YData  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-python-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/github.com/https:\/\/${{ secrets.ACCESS_TOKEN }}:x-oauth-basic@github.com/g' data-science/ydata/requirements.txt
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/ydata/requirements.txt

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.PRIVATE_CONTAINER_REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: YData image
      run: ./images-builder.sh ydata cpu ${{ needs.prepare.outputs.version }}

  jupyterlab-python-ydata-image-gpu:
    name: YData  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-python-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/github.com/https:\/\/${{ secrets.ACCESS_TOKEN }}:x-oauth-basic@github.com/g' data-science/ydata/requirements.txt
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/ydata/requirements.txt

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.PRIVATE_CONTAINER_REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: YData image
      run: ./images-builder.sh ydata gpu ${{ needs.prepare.outputs.version }}

  jupyterlab-r-images-cpu:
    name: JupyterLab R  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, base-r-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab R images
      run: ./images-builder.sh jupyterlab_r cpu ${{ needs.prepare.outputs.version }}

  jupyterlab-r-images-gpu:
    name: JupyterLab R  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, base-r-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab R images
      run: ./images-builder.sh jupyterlab_r gpu ${{ needs.prepare.outputs.version }}

  jupyterlab-r-tensorflow-115-images-cpu:
    name: JupyterLab R Tensorflow 1.15  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-r-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab R Tensorflow images
      run: ./images-builder.sh jupyterlab_r_tensorflow-1.5 cpu ${{ needs.prepare.outputs.version }}

  jupyterlab-r-tensorflow-115-images-gpu:
    name: JupyterLab R Tensorflow 1.15  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-r-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab R Tensorflow images
      run: ./images-builder.sh jupyterlab_r_tensorflow-1.15 gpu ${{ needs.prepare.outputs.version }}

  jupyterlab-r-tensorflow-23-images-cpu:
    name: JupyterLab R Tensorflow  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-r-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab R Tensorflow images
      run: ./images-builder.sh jupyterlab_r_tensorflow-2.3 cpu ${{ needs.prepare.outputs.version }}

  jupyterlab-r-tensorflow-23-images-gpu:
    name: JupyterLab R Tensorflow  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-r-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab R Tensorflow images
      run: ./images-builder.sh jupyterlab_r_tensorflow-2.3 gpu ${{ needs.prepare.outputs.version }}

  jupyterlab-r-torch-images-cpu:
    name: JupyterLab R Torch  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-r-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab R Torch images
      run: ./images-builder.sh jupyterlab_r_torch cpu ${{ needs.prepare.outputs.version }}

  jupyterlab-r-torch-images-gpu:
    name: JupyterLab R Torch  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, jupyterlab-r-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab R Torch images
      run: ./images-builder.sh jupyterlab_r_torch gpu ${{ needs.prepare.outputs.version }}

  h2o-images-cpu:
    name: H2O  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, base-python-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: H2O images
      run: ./images-builder.sh h2o cpu ${{ needs.prepare.outputs.version }}

  h2o-images-gpu:
    name: H2O  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, base-python-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: H2O images
      run: ./images-builder.sh h2o gpu ${{ needs.prepare.outputs.version }}

  rstudio-images-cpu:
    name: RStudio  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, base-r-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: RStudio images
      run: ./images-builder.sh rstudio cpu ${{ needs.prepare.outputs.version }}

  rstudio-images-gpu:
    name: RStudio  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, base-r-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: RStudio images
      run: ./images-builder.sh rstudio gpu ${{ needs.prepare.outputs.version }}

  rstudio-tensorflow-images-cpu:
    name: RStudio Tensorflow  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, rstudio-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: RStudio Tensorflow images
      run: ./images-builder.sh rstudio_tensorflow cpu ${{ needs.prepare.outputs.version }}

  rstudio-tensorflow-images-gpu:
    name: RStudio Tensorflow  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, rstudio-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: RStudio Tensorflow images
      run: ./images-builder.sh rstudio_tensorflow gpu ${{ needs.prepare.outputs.version }}

  rstudio-torch-images-cpu:
    name: RStudio Torch  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, rstudio-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: RStudio Torch images
      run: ./images-builder.sh rstudio_torch cpu ${{ needs.prepare.outputs.version }}

  rstudio-torch-images-gpu:
    name: RStudio Torch  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, rstudio-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: RStudio Torch images
      run: ./images-builder.sh rstudio_torch gpu ${{ needs.prepare.outputs.version }}

  visualcode-images-cpu:
    name: Visual Code  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, base-python-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Visual Code images
      run: ./images-builder.sh visualcode cpu ${{ needs.prepare.outputs.version }}

  visualcode-images-gpu:
    name: Visual Code  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, base-python-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses:  docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Visual Code images
      run: ./images-builder.sh visualcode gpu ${{ needs.prepare.outputs.version }}

  visualcode-tensorflow-115-images-cpu:
    name: Visual Code Tensorflow 1.15  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, visualcode-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/visualcode_tensorflow-1.15/requirements.txt

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab Python Tensorflow 1.15 Bundles images
      run: ./images-builder.sh visualcode_tensorflow-1.15 cpu ${{ needs.prepare.outputs.version }}

  visualcode-tensorflow-115-images-gpu:
    name: Visual Code Tensorflow 1.15  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, visualcode-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        3sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/visualcode_tensorflow-1.15/requirements.txt

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Visual Code Tensorflow 1.15 Bundles images
      run: ./images-builder.sh visualcode_tensorflow-1.15 gpu ${{ needs.prepare.outputs.version }}

  visualcode-tensorflow-23-images-cpu:
    name: Visual Code Tensorflow 2.3  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, visualcode-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/visualcode_tensorflow-2./requirements.txt

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: JupyterLab Python Tensorflow 2.3 Bundles images
      run: ./images-builder.sh visualcode_tensorflow-2.3 cpu ${{ needs.prepare.outputs.version }}

  visualcode-tensorflow-23-images-gpu:
    name: Visual Code Tensorflow 2.3  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, visualcode-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/visualcode_tensorflow-2.3/requirements.txt

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Visual Code Tensorflow 2.3 Bundles images
      run: ./images-builder.sh visualcode_tensorflow-2.3 gpu ${{ needs.prepare.outputs.version }}

  visualcode-torch-images-cpu:
    name: Visual Code Torch  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, visualcode-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/visualcode_torch-1.7/requirements.txt

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Visual Code Torch Bundles images
      run: ./images-builder.sh visualcode_torch cpu ${{ needs.prepare.outputs.version }}

  visualcode-torch-images-gpu:
    name: Visual Code Torch  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, visualcode-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/visualcode_ydata/requirements.txt

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Visual Code Torch Bundles images
      run: ./images-builder.sh visualcode_torch gpu ${{ needs.prepare.outputs.version }}

  visualcode-ydata-image-cpu:
    name: VisualCode YData  CPU
    runs-on: ubuntu-20.04

    needs: [prepare, visualcode-images-cpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/github.com/https:\/\/${{ secrets.ACCESS_TOKEN }}:x-oauth-basic@github.com/g' data-science/visualcode_ydata/requirements.txt
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/visualcode_ydata/requirements.txt

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.PRIVATE_CONTAINER_REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: VisualCode YData image
      run: ./images-builder.sh visualcode_ydata cpu ${{ needs.prepare.outputs.version }}

  visualcode-ydata-image-gpu:
    name: VisualCode YData  GPU
    runs-on: ubuntu-20.04

    needs: [prepare, visualcode-images-gpu]

    steps:
    - uses: actions/checkout@v2

    - name: Add authentication to requirements file
      run: |
        sed -i 's/https:\/\/github.com/https:\/\/${{ secrets.ACCESS_TOKEN }}:x-oauth-basic@github.com/g' data-science/visualcode_ydata/requirements.txt
        sed -i 's/https:\/\/pypi.ydata.ai/https:\/\/${{ secrets.PRIVATE_PYPI_USERNAME }}:${{ secrets.PRIVATE_PYPI_PASSWORD }}@pypi.ydata.ai/g' data-science/visualcode_ydata/requirements.txt

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.PRIVATE_CONTAINER_REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: VisualCode YData image
      run: ./images-builder.sh visualcode_ydata gpu ${{ needs.prepare.outputs.version }}


  update-manifests:
    name: Update Manifests
    runs-on: ubuntu-20.04

    needs: [prepare,
            jupyterlab-python-tensorflow-115-images-cpu,
            jupyterlab-python-tensorflow-115-images-gpu,
            jupyterlab-python-tensorflow-23-images-cpu,
            jupyterlab-python-tensorflow-23-images-gpu,
            jupyterlab-python-torch-images-cpu,
            jupyterlab-python-torch-images-gpu,
            jupyterlab-python-ydata-image-cpu,
            jupyterlab-python-ydata-image-gpu,
            jupyterlab-r-tensorflow-115-images-cpu,
            jupyterlab-r-tensorflow-115-images-gpu,
            jupyterlab-r-tensorflow-23-images-cpu,
            jupyterlab-r-tensorflow-23-images-gpu,
            jupyterlab-r-torch-images-cpu,
            jupyterlab-r-torch-images-gpu,
            h2o-images-cpu,
            h2o-images-gpu,
            rstudio-tensorflow-images-cpu,
            rstudio-tensorflow-images-gpu,
            rstudio-torch-images-cpu,
            rstudio-torch-images-gpu,
            visualcode-tensorflow-115-images-cpu,
            visualcode-tensorflow-115-images-gpu,
            visualcode-tensorflow-23-images-gpu,
            visualcode-tensorflow-23-images-cpu,
            visualcode-torch-images-cpu,
            visualcode-torch-images-gpu,
            visualcode-ydata-image-cpu,
            visualcode-ydata-image-gpu]

    steps:
    - name: Mount laboratories images tag version
      env:
        VERSION: ${{ needs.prepare.outputs.version }}
      id: replace
      uses: frabert/replace-string-action@v1.2
      with:
        pattern: VERSION
        flags: g
        string: 'rstudio-cpu:VERSION,rstudio-gpu:VERSION,jupyterlab_r-cpu:VERSION,jupyterlab_python-cpu:VERSION,jupyterlab_r-gpu:VERSION,jupyterlab_python-gpu:VERSION,ydata-cpu:VERSION,ydata-gpu:VERSION,h2oflow-cpu:VERSION,h2oflow-gpu:VERSION,tensorflow-1.15-cpu:VERSION,tensorflow-1.15-gpu:VERSION,tensorflow-2.3-cpu:VERSION,tensorflow-2.3-gpu:VERSION,torch-1.7-cpu:VERSION,torch-1.7-gpu:VERSION,visualcode-cpu:VERSION,visualcode-gpu:VERSION'
        replace-with: ${{ env.VERSION }}

    - name: Checkout Manifests repo
      uses: actions/checkout@v2
      with:
        repository: ydataai/manifests
        token: ${{ secrets.ACCESS_TOKEN }}

    - name: Update params.env with laboratories image tag
      run: |
        cd ydata/${COMPONENT}
        sed -i -r 's/\laboratoriesImageTag=(.*)/laboratoriesImageTag=${{steps.replace.outputs.replaced}}/g' params.env

    - name: Commit and push image update into manifests repo
      env:
        VERSION: ${{ needs.prepare.outputs.version }}
      run: |
        git config user.email "azory@ydata.ai"
        git config user.name "Azory YData Bot"
        git commit -a -m "chore(bump): [CI] [DEV] bump laboratories image tag to $VERSION"
        git push origin master
